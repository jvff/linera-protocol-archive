[package]
name = "linera-views"
version = "0.11.0"
description = "A library mapping complex data structures onto a key-value store, used by the Linera protocol"
authors = ["Linera <contact@linera.io>"]
readme = "README.md"
repository = "https://github.com/linera-io/linera-protocol"
homepage = "https://linera.dev"
documentation = "https://docs.rs/linera-views/latest/linera_views/"
license = "Apache-2.0"
edition = "2021"

# Not used, but here to provide the `js` feature to `rand`
metadata.cargo-machete.ignored = ["getrandom"]

[package.metadata.docs.rs]
features = ["scylladb", "rocksdb", "dynamodb", "test"]
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[features]
metrics = ["dep:hex", "linera-base/metrics", "linera-views-derive/metrics"]
test = ["tokio/macros", "rand"]
web = ["linera-base/web"]
indexeddb = ["indexed_db_futures", "wasm-bindgen"]

dynamodb = ["aws-config", "aws-sdk-dynamodb", "aws-smithy-types"]
scylladb = ["scylla"]

[dependencies]
anyhow.workspace = true
async-graphql.workspace = true
async-lock.workspace = true
async-trait.workspace = true
aws-config = { workspace = true, optional = true }
aws-sdk-dynamodb = { workspace = true, optional = true }
aws-smithy-types = { workspace = true, optional = true }
bcs.workspace = true
convert_case.workspace = true
futures.workspace = true
generic-array.workspace = true
hex = { workspace = true, optional = true }
linera-base.workspace = true
linera-views-derive.workspace = true
linera-witty.workspace = true
linked-hash-map.workspace = true
prometheus.workspace = true
rand = { workspace = true, optional = true, features = ["small_rng"] }
rocksdb = { workspace = true, optional = true }
scylla = { workspace = true, optional = true }
serde.workspace = true
sha3.workspace = true
static_assertions.workspace = true
tempfile.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["rt", "sync"] }
tracing.workspace = true
trait-variant.workspace = true

[target.wasm32-unknown-unknown.dependencies]
indexed_db_futures = { workspace = true, optional = true }
wasm-bindgen = { workspace = true, optional = true }
web-sys = { workspace = true, features = ["console"] }

[target.wasm32-unknown-unknown.dev-dependencies]
wasm-bindgen-test.workspace = true

[dev-dependencies]
linera-views = { path = ".", features = ["test"] }
rand.workspace = true
test-case.workspace = true
tokio-test.workspace = true

[build-dependencies]
cfg_aliases.workspace = true
