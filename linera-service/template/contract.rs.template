#![cfg_attr(target_arch = "wasm32", no_main)]

mod state;

use linera_sdk::{{base::WithContractAbi, Contract, ContractRuntime}};

use self::state::Application;

pub struct ApplicationContract {{
    state: Application,
    runtime: ContractRuntime<Self>,
}}

linera_sdk::contract!(ApplicationContract);

impl WithContractAbi for ApplicationContract {{
    type Abi = {project_name}::ApplicationAbi;
}}

impl Contract for ApplicationContract {{
    type State = Application;
    type Message = ();
    type Parameters = ();
    type InstantiationArgument = ();

    async fn new(state: Self::State, runtime: ContractRuntime<Self>) -> Self {{
        ApplicationContract {{ state, runtime }}
    }}

    fn state_mut(&mut self) -> &mut Self::State {{
        &mut self.state
    }}

    async fn instantiate(&mut self, _argument: Self::InstantiationArgument) {{}}

    async fn execute_operation(&mut self, _operation: Self::Operation) -> Self::Response {{}}

    async fn execute_message(&mut self, _message: Self::Message) {{}}
}}
