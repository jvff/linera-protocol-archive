// Copyright (c) Zefchain Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

//! Internal module with code generated by [`wit-bindgen`](https://github.com/jvff/wit-bindgen).

#![allow(missing_docs)]

// Export the contract interface.
wit_bindgen::generate!({
    world: "contract",
    exports: {
        "linera:app/contract-entrypoints": ContractEntrypoints,
    },
});

pub use self::linera::app::contract_system_api;
use super::{
    __contract_execute_message, __contract_execute_operation, __contract_finalize,
    __contract_initialize,
};

/// Implementation of the contract WIT entrypoints.
pub struct ContractEntrypoints;

impl self::exports::linera::app::contract_entrypoints::Guest for ContractEntrypoints {
    fn initialize(argument: Vec<u8>) -> Result<(), String> {
        unsafe { __contract_initialize(argument) }
    }

    fn execute_operation(operation: Vec<u8>) -> Result<Vec<u8>, String> {
        unsafe { __contract_execute_operation(operation) }
    }

    fn execute_message(message: Vec<u8>) -> Result<(), String> {
        unsafe { __contract_execute_message(message) }
    }

    fn finalize() -> Result<(), String> {
        unsafe { __contract_finalize() }
    }
}
