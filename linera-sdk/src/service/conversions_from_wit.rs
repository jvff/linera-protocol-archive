// Copyright (c) Zefchain Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

//! Conversions from types generated by [`wit-bindgen-guest-rust`] to types declared in [`linera-sdk`].

use super::wit_types;
use crate::QueryContext;
use linera_base::{
    crypto::CryptoHash,
    data_types::{Amount, BlockHeight},
    identifiers::{ApplicationId, BytecodeId, ChainId, MessageId},
};

impl From<wit_types::QueryContext> for QueryContext {
    fn from(application_context: wit_types::QueryContext) -> Self {
        QueryContext {
            chain_id: application_context.chain_id.into(),
        }
    }
}

impl From<wit_types::ChainId> for ChainId {
    fn from(chain_id: wit_types::ChainId) -> Self {
        ChainId(chain_id.inner0.into())
    }
}

impl From<wit_types::CryptoHash> for CryptoHash {
    fn from(hash_value: wit_types::CryptoHash) -> Self {
        CryptoHash::from([
            hash_value.part1,
            hash_value.part2,
            hash_value.part3,
            hash_value.part4,
        ])
    }
}
